# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import Positions_pb2 as Positions__pb2


class PositionsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPositions = channel.unary_unary(
                '/metatrader.PositionsService/GetPositions',
                request_serializer=Positions__pb2.GetPositionsReq.SerializeToString,
                response_deserializer=Positions__pb2.PositionsList.FromString,
                )
        self.OpenPosition = channel.unary_unary(
                '/metatrader.PositionsService/OpenPosition',
                request_serializer=Positions__pb2.OpenPositionReq.SerializeToString,
                response_deserializer=Positions__pb2.OpenPositionRes.FromString,
                )
        self.ModifyPosition = channel.unary_unary(
                '/metatrader.PositionsService/ModifyPosition',
                request_serializer=Positions__pb2.ModifyPositionReq.SerializeToString,
                response_deserializer=Positions__pb2.ModifyPositionRes.FromString,
                )
        self.ClosePosition = channel.unary_unary(
                '/metatrader.PositionsService/ClosePosition',
                request_serializer=Positions__pb2.ClosePositionReq.SerializeToString,
                response_deserializer=Positions__pb2.ClosePositionRes.FromString,
                )


class PositionsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPositions(self, request, context):
        """Gets an array of the current open positions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenPosition(self, request, context):
        """Opens a position
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModifyPosition(self, request, context):
        """Modifies a position
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClosePosition(self, request, context):
        """Closes a position
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PositionsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPositions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPositions,
                    request_deserializer=Positions__pb2.GetPositionsReq.FromString,
                    response_serializer=Positions__pb2.PositionsList.SerializeToString,
            ),
            'OpenPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenPosition,
                    request_deserializer=Positions__pb2.OpenPositionReq.FromString,
                    response_serializer=Positions__pb2.OpenPositionRes.SerializeToString,
            ),
            'ModifyPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.ModifyPosition,
                    request_deserializer=Positions__pb2.ModifyPositionReq.FromString,
                    response_serializer=Positions__pb2.ModifyPositionRes.SerializeToString,
            ),
            'ClosePosition': grpc.unary_unary_rpc_method_handler(
                    servicer.ClosePosition,
                    request_deserializer=Positions__pb2.ClosePositionReq.FromString,
                    response_serializer=Positions__pb2.ClosePositionRes.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'metatrader.PositionsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PositionsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPositions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/metatrader.PositionsService/GetPositions',
            Positions__pb2.GetPositionsReq.SerializeToString,
            Positions__pb2.PositionsList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OpenPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/metatrader.PositionsService/OpenPosition',
            Positions__pb2.OpenPositionReq.SerializeToString,
            Positions__pb2.OpenPositionRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ModifyPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/metatrader.PositionsService/ModifyPosition',
            Positions__pb2.ModifyPositionReq.SerializeToString,
            Positions__pb2.ModifyPositionRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClosePosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/metatrader.PositionsService/ClosePosition',
            Positions__pb2.ClosePositionReq.SerializeToString,
            Positions__pb2.ClosePositionRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
